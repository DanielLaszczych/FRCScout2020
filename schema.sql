
drop table if exists competition cascade;

create table competition (
    competition_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(255) NOT NULL,
    is_current boolean NOT NULL DEFAULT FALSE
);

INSERT INTO competition (name, is_current) VALUES ('HVR', TRUE);
INSERT INTO competition (name, is_current) VALUES ('SBPLI', FALSE);
INSERT INTO competition (name, is_current) VALUES ('NYC', FALSE);
INSERT INTO competition (name, is_current) VALUES ('Champs', FALSE);

drop table if exists team cascade;

create table team (
    team_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    num int,
    name varchar(100)
);

insert into team (num, name) values ('1796', 'RoboTigers');

drop table if exists match;

create table match (
    match_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    competition_id int references competition(competition_id) NOT NULL,
    team_id int references team(team_id) NOT NULL,
    match_num int NOT NULL,
    last_modified timestamp(0) NOT NULL DEFAULT (now())::timestamp(0),
    CONSTRAINT match_composite_key UNIQUE (competition_id, team_id, match_num)
);

drop table if exists pit;

create table pit (
    pit_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status varchar(30) NOT NULL DEFAULT 'NOT STARTED',
    competition_id int references competition(competition_id) NOT NULL,
    team_id int references team(team_id) NOT NULL,
    last_modified timestamp(0) NOT NULL DEFAULT (now())::timestamp(0),
    CONSTRAINT pit_composite_key UNIQUE (competition_id, team_id)
);

INSERT INTO pit (team_id, competition_id)
SELECT t.team_id, c.competition_id
FROM (SELECT team_id from team) t, 
(SELECT competition_id from competition where name='HVR') c;
